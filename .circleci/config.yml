---
version: 2.1

orbs:
  python: circleci/python@2.0.3
  taskfile: threecomma/taskfile@0.1.0

tags_only: &tags_only
  filters:
    tags:
      only: /.+/
    branches:
      ignore: /.*/
jobs:
  get_version:
    docker: &job_docker_conf
      - image: cimg/python:3.8
    steps: &install_fake_version
      - checkout
      - run: &create_fake_version_file
          # Running `setup.py` requires a `version` file, and the more or less
          # proper way to get that is to install avakas, though for testing this
          # feels better
          name: fake a version file
          command: "echo 'v0.0.0-testonlysofake.0' > version"
      - python/install-packages: &install_setup_py
          pkg-manager: "pip-dist"
      - run:
          name: Get correct version
          command: avakas show . --flavor git-native
      - persist_to_workspace:
          root: '.'
          paths:
            - version

  build:
    docker: *job_docker_conf
    steps:
      - checkout
      - attach_workspace:
          at: '.'
      - python/dist
      - persist_to_workspace:
          root: '.'
          paths:
            - dist

  test:
    # ToDo matrix
    docker: *job_docker_conf
    steps:
      - checkout
      - attach_workspace:
          at: '.'
      - run: &install_built_wheel
          name: install built wheel
          command: pip install dist/avakas-$(cat version)-py3-none-any.whl

      # install dev requirements for running tests
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: "requirements-dev.txt"
      - run:
          name: Run Tests
          command: make test

# ToDo, parameterize these, want to do it with some logic so a bool param gets
# me the --prerelease, but don't want to sink the time figuring that out quite
# yet -TMJ
  perchance_a_bump:
    docker: *job_docker_conf
    parameters:
      args:
        type: string
        default: ""

    steps:
      - checkout
      - attach_workspace:
          at: '.'
      - run: *install_built_wheel
      - add_ssh_keys:
          fingerprints:
            - "7a:21:b1:cf:4c:f2:cf:26:20:9d:cd:c9:ce:9e:76:9f"
      - run:
          name: you can bump if you wanna
          command: avakas bump "." auto --flavor git-native --default-bump patch --branch mainline << parameters.args >>

  dist:
    docker: *job_docker_conf
    steps:
      - attach_workspace:
          at: '.'
      - run: 'ls dist/avakas-${CIRCLE_TAG}-py3-none-any.whl'

workflows:
  # Combining all three as:
  #   * there's not a situation where we want to not do any steps (the
  #     conditionals for maybe tag are in `maybe tag` step).
  #   * We can just share a persisted workspace among jobs. We _could_ do test
  #     and perchance_a_bump installing the package from setup.py or whatever,
  #     but I (Tyler) see no reason to do so -TMJ
  build_test_maybe_tag:
    jobs:
      - get_version
      - build:
          requires:
            - get_version
      - test:
          requires:
            - build
      - perchance_a_bump:
          requires:
            - test
            - build
          filters:
            branches:
              ignore:
                - mainline
          args: "--prerelease --prerelease-prefix pre --build --branch $CIRCLE_BRANCH"
      - perchance_a_bump:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - mainline
  dist:
    jobs:
      # I'm not sure how to get the circleCI artifacts from another workflow
      # run, and I'm not going to block on that now. This should be investigated
      # to avoid the rebuild. would love to get the previous wheel, and use that
      # version of avakas (built off of the same commit) to bump the version
      # rather than this kinda hacky rebuild. PEP517 compliant build system
      # would also make some of these issues easier
      - get_version: *tags_only
      - build:
          <<: *tags_only
          requires:
            - get_version
      - dist:
          <<: *tags_only
          requires:
            - build
